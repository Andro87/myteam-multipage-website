import Head from "next/head";
import styles from "../styles/contact.module.scss";
import Header from "../components/header";
import Footer from "../components/footer";
import Info from "../components/info";
import { useForm } from "react-hook-form";
import { useState } from "react";
export default function Contact() {
    const {
        register,
        formState: { errors },
        handleSubmit
    } = useForm();
    const onSubmit = data => {
        alert(JSON.stringify(data));
    };
    const [mobile, setMobile] = useState(false);
    return (
        <div
            className={`${styles.main_wrap} ${
                mobile ? styles.menu_open : null
            }`}
        >
            <Head>
                <title>
                    Frontend Mentor | myteam website challenge - Contact
                </title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/images/favicon-32x32.png" />
            </Head>
            <Header onMobile={() => setMobile(!mobile)} />

            <main className={styles.main}>
                <div className={styles.main_container}>
                    <div className={styles.main_info}>
                        <h1> Contact</h1>
                        <p className={styles.ask_us}> Ask us about</p>
                        <div className={styles.info_container}>
                            <Info
                                icon={
                                    <img src="/images/icon-person.svg" alt="" />
                                }
                                paragraph="The quality of our talent network"
                            />

                            <Info
                                icon={<img src="/images/icon-cog.svg" alt="" />}
                                paragraph="Usage & implementation of our software"
                            />
                            <Info
                                icon={
                                    <img src="/images/icon-chart.svg" alt="" />
                                }
                                paragraph="How we help drive innovation"
                            />
                        </div>
                    </div>

                    <form
                        className={styles.main_form}
                        noValidate
                        onSubmit={handleSubmit(onSubmit)}
                    >
                        <label
                            htmlFor="name"
                            className={`${styles.header} ${
                                errors.name ? styles.alert_header : null
                            }`}
                        >
                            Name
                        </label>
                        <input
                            id="name"
                            type="text"
                            name="name"
                            className={`${styles.input} ${
                                errors.name ? styles.alert : null
                            }`}
                            {...register("name", {
                                required: "This field is required"
                            })}
                        />
                        {errors.name && (
                            <p className={styles.error_message}>
                                {errors.name.message}
                            </p>
                        )}

                        <label
                            htmlFor="email"
                            className={`${styles.header} ${
                                errors.email ? styles.alert_header : null
                            }`}
                        >
                            Email Address
                        </label>
                        <input
                            id="email"
                            type="email"
                            name="email"
                            className={`${styles.input} ${
                                errors.email ? styles.alert : null
                            }`}
                            {...register("email", {
                                required: "This field is required",
                                pattern: {
                                    value: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/,
                                    message: "Invalid email address"
                                }
                            })}
                        />

                        {errors.email && (
                            <p className={styles.error_message}>
                                {errors.email.message}
                            </p>
                        )}

                        <label
                            htmlFor="company"
                            className={`${styles.header} ${
                                errors.company ? styles.alert_header : null
                            }`}
                        >
                            Company Name
                        </label>
                        <input
                            id="company"
                            type="text"
                            name="company"
                            className={`${styles.input} ${
                                errors.company ? styles.alert : null
                            }`}
                            {...register("company", {
                                required: "This field is required"
                            })}
                        />
                        {errors.company && (
                            <p className={styles.error_message}>
                                {errors.company.message}
                            </p>
                        )}

                        <label
                            htmlFor="title"
                            className={`${styles.header} ${
                                errors.title ? styles.alert_header : null
                            }`}
                        >
                            Title
                        </label>
                        <input
                            id="title"
                            type="text"
                            name="title"
                            className={`${styles.input} ${
                                errors.title ? styles.alert : null
                            }`}
                            {...register("title", {
                                required: "This field is required"
                            })}
                        />
                        {errors.title && (
                            <p className={styles.error_message}>
                                {errors.title.message}
                            </p>
                        )}

                        <label
                            htmlFor="message"
                            className={`${styles.header} ${
                                errors.message ? styles.alert_header : null
                            }`}
                        >
                            Message
                        </label>
                        <textarea
                            id="message"
                            name="message"
                            className={`${styles.input} ${
                                errors.message ? styles.alert : null
                            }`}
                            {...register("message", {
                                required: "This field is required"
                            })}
                        ></textarea>
                        {errors.message && (
                            <p className={styles.error_message}>
                                {errors.message.message}
                            </p>
                        )}

                        <button
                            type="submit"
                            aria-label="submit"
                            className={styles.submit_btn}
                        >
                            submit
                        </button>
                    </form>
                </div>
            </main>
            <Footer />
        </div>
    );
}
